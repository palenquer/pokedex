import axios from "axios";
import type { GetStaticProps } from "next";
import Head from "next/head";
import { useEffect } from "react";

interface HomeProps {
  page: PageProps;
  pokelist: Pokelist[];
}

interface PageProps {
  count: number;
  next: string;
  previous?: string;
}
interface DataProps {
  name: string;
  url: string;
}

interface Pokelist {
  id: number;
  name: string;
  sprite: string;
  types: [string];
}
interface TypesProps {
  slot: number;
  type: {
    name: string;
    url: string;
  };
}

const Home = ({ page, pokelist }: HomeProps) => {
  useEffect(() => {
    console.log(pokelist);
  }, []);

  return (
    <>
      <Head>
        <title>Home</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="lg:mx-auto lg:container lg:px-40 md:py-8 p-4 flex flex-col gap-8">
        <input
          className="w-full p-2 rounded-md placeholder:italic text-gray-800"
          type="text"
          placeholder="Search"
        />

        <div className="flex flex-col items-center gap-8 md:grid md:grid-cols-2 xl:grid-cols-4">
          {pokelist.map((item) => {
            
            return (
              <div
                key={item.id}
                className={`bg-background flex flex-col justify-center items-center relative py-4 px-12 rounded-md w-full border-type-${item.types[0]} border-4`}
              >
                <div className={`absolute top-4 right-4 bg-type-${item.types[0]} w-8 h-8 flex justify-center items-center rounded-2xl text-background`}>
                  <span className="font-bold text-sm">{item.id}</span>
                </div>

                <div className="flex flex-col items-center">
                  <h1 className="font-bold text-lg">
                    {item.name.toUpperCase()}
                  </h1>
                  <img src={item.sprite} alt="sprite" />
                </div>

                <div className="flex gap-2">
                  {item.types.map((type) => {
                    
                    return (
                      <span
                        key={type}
                        className={`font-bold p-1 px-2 rounded-md text-sm text-background bg-type-${type}`}
                      >
                        {type.toUpperCase()}
                      </span>
                    );
                  })}
                </div>
              </div>
            );
          })}
        </div>
      </main>
    </>
  );
};

export default Home;

export const getStaticProps: GetStaticProps = async () => {
  async function fetchData(url: string) {
    return await axios
      .get(url)
      .then((response) => response.data)
      .catch((error) => console.error(error));
  }

  function getAllData(urls: []) {
    return Promise.all(urls.map(fetchData));
  }

  const response = await axios
    .get("https://pokeapi.co/api/v2/pokemon/?offset=0&limit=12")
    .then((response) => response.data)
    .catch((error) => {
      console.error(error);
    });

  const page = {
    count: response.count,
    next: response.next,
    previous: response.previous,
  };

  const data = response.results;

  const urls = data.map((item: DataProps) => item.url);

  const pokelist = await getAllData(urls)
    .then((response) => {
      return response.map((item) => {
        return {
          id: item.id,
          name: item.name,
          sprite: item.sprites.front_default,
          types: item.types.map((res: TypesProps) => res.type.name),
        };
      });
    })
    .catch((error) => {
      console.error(error);
    });

  return {
    props: {
      page,
      pokelist,
    },
  };
};
